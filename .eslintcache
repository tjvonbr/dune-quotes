[{"/Users/trevor/fun/dune-quotes/src/index.tsx":"1","/Users/trevor/fun/dune-quotes/src/reportWebVitals.ts":"2","/Users/trevor/fun/dune-quotes/src/App.tsx":"3","/Users/trevor/fun/dune-quotes/src/views/Login.tsx":"4","/Users/trevor/fun/dune-quotes/src/views/Register.tsx":"5","/Users/trevor/fun/dune-quotes/src/views/Home.tsx":"6","/Users/trevor/fun/dune-quotes/src/components/app-shell.tsx":"7","/Users/trevor/fun/dune-quotes/src/components/navbar.tsx":"8","/Users/trevor/fun/dune-quotes/src/components/hamburger.tsx":"9","/Users/trevor/fun/dune-quotes/src/views/Dashboard.tsx":"10"},{"size":500,"mtime":1607584957210,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1607584957210,"results":"13","hashOfConfig":"12"},{"size":575,"mtime":1607910439022,"results":"14","hashOfConfig":"12"},{"size":1285,"mtime":1607584957211,"results":"15","hashOfConfig":"12"},{"size":1625,"mtime":1607584957212,"results":"16","hashOfConfig":"12"},{"size":1136,"mtime":1607910447524,"results":"17","hashOfConfig":"12"},{"size":566,"mtime":1607584957209,"results":"18","hashOfConfig":"12"},{"size":572,"mtime":1607900508617,"results":"19","hashOfConfig":"12"},{"size":537,"mtime":1607900508617,"results":"20","hashOfConfig":"12"},{"size":214,"mtime":1607910429340,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"tba6nb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/trevor/fun/dune-quotes/src/index.tsx",[],["45","46"],"/Users/trevor/fun/dune-quotes/src/reportWebVitals.ts",[],"/Users/trevor/fun/dune-quotes/src/App.tsx",[],"/Users/trevor/fun/dune-quotes/src/views/Login.tsx",["47","48","49"],"import React, { useState } from \"react\"\nimport AppShell from \"../components/app-shell\"\n\ntype LoginUser = {\n  email: string,\n  password: string\n}\n\nconst Login: React.FC = () => {\n  const [creds, setCreds] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  return (\n    <AppShell>\n      <div className=\"center-wrapper\">\n        <h1 className=\"register-header\">Login</h1>\n        <form className=\"form-wrapper login\">\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input \n              className=\"input\"\n              id=\"email\"\n              type=\"text\" \n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"password\">\n                Password\n            </label>\n            <input \n              className=\"input\"\n              id=\"password\"\n              type=\"text\" \n            />\n          </div>\n          <button className=\"button-register\" type=\"submit\">\n            Login\n          </button>\n        </form>\n        <p className=\"redirect\">\n          Don't have an account yet? Register{\" \"}\n            <a href=\"/register\">here.</a>\n        </p>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default Login\n","/Users/trevor/fun/dune-quotes/src/views/Register.tsx",["50","51","52"],"import React, { useState } from \"react\"\nimport AppShell from \"../components/app-shell\"\n\ntype RegisterUser = {\n  firstName: string,\n  email: string,\n  password: string\n}\n\nconst Register: React.FC = () => {\n  const [creds, setCreds] = useState({\n    firstName: \"\",\n    email: \"\",\n    password: \"\"\n  })\n\n  return (\n    <AppShell>\n      <div className=\"center-wrapper\">\n        <h1 className=\"register-header\">Register</h1>\n        <form className=\"form-wrapper register\">\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"firstName\">\n              First Name\n            </label>\n            <input \n              className=\"input\"\n              id=\"firstName\"\n              type=\"text\" \n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"email\">\n                Email\n            </label>\n            <input \n              className=\"input\"\n              id=\"email\"\n              type=\"text\" \n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input \n              className=\"input\"\n              id=\"password\"\n              type=\"password\" \n            />\n          </div>\n          <button className=\"button-register\" type=\"submit\">\n            Register\n          </button>\n        </form>\n        <p className=\"redirect\">\n          Already have an account? Login{\" \"}\n            <a href=\"/login\">here.</a>\n        </p>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default Register\n","/Users/trevor/fun/dune-quotes/src/views/Home.tsx",[],"/Users/trevor/fun/dune-quotes/src/components/app-shell.tsx",[],"/Users/trevor/fun/dune-quotes/src/components/navbar.tsx",[],"/Users/trevor/fun/dune-quotes/src/components/hamburger.tsx",[],"/Users/trevor/fun/dune-quotes/src/views/Dashboard.tsx",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":6,"nodeType":"59","messageId":"60","endLine":4,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":10,"column":10,"nodeType":"59","messageId":"60","endLine":10,"endColumn":15},{"ruleId":"57","severity":1,"message":"62","line":10,"column":17,"nodeType":"59","messageId":"60","endLine":10,"endColumn":25},{"ruleId":"57","severity":1,"message":"63","line":4,"column":6,"nodeType":"59","messageId":"60","endLine":4,"endColumn":18},{"ruleId":"57","severity":1,"message":"61","line":11,"column":10,"nodeType":"59","messageId":"60","endLine":11,"endColumn":15},{"ruleId":"57","severity":1,"message":"62","line":11,"column":17,"nodeType":"59","messageId":"60","endLine":11,"endColumn":25},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'LoginUser' is defined but never used.","Identifier","unusedVar","'creds' is assigned a value but never used.","'setCreds' is assigned a value but never used.","'RegisterUser' is defined but never used.","no-global-assign","no-unsafe-negation"]