[{"/Users/trevor/fun/dune-quotes/src/index.tsx":"1","/Users/trevor/fun/dune-quotes/src/reportWebVitals.ts":"2","/Users/trevor/fun/dune-quotes/src/App.tsx":"3","/Users/trevor/fun/dune-quotes/src/views/Home.tsx":"4","/Users/trevor/fun/dune-quotes/src/components/app-shell.tsx":"5","/Users/trevor/fun/dune-quotes/src/components/hamburger.tsx":"6","/Users/trevor/fun/dune-quotes/src/components/navbar.tsx":"7","/Users/trevor/fun/dune-quotes/src/views/Register.tsx":"8","/Users/trevor/fun/dune-quotes/src/views/Login.tsx":"9"},{"size":500,"mtime":1607455686954,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1607455686954,"results":"12","hashOfConfig":"11"},{"size":460,"mtime":1607499007550,"results":"13","hashOfConfig":"11"},{"size":1120,"mtime":1607577989590,"results":"14","hashOfConfig":"11"},{"size":566,"mtime":1607581585748,"results":"15","hashOfConfig":"11"},{"size":446,"mtime":1607503662086,"results":"16","hashOfConfig":"11"},{"size":505,"mtime":1607581630529,"results":"17","hashOfConfig":"11"},{"size":1625,"mtime":1607495250236,"results":"18","hashOfConfig":"11"},{"size":1285,"mtime":1607497360889,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"tba6nb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/trevor/fun/dune-quotes/src/index.tsx",[],["41","42"],"/Users/trevor/fun/dune-quotes/src/reportWebVitals.ts",[],"/Users/trevor/fun/dune-quotes/src/App.tsx",[],"/Users/trevor/fun/dune-quotes/src/views/Home.tsx",[],"/Users/trevor/fun/dune-quotes/src/components/app-shell.tsx",[],"/Users/trevor/fun/dune-quotes/src/components/hamburger.tsx",[],"/Users/trevor/fun/dune-quotes/src/components/navbar.tsx",[],"/Users/trevor/fun/dune-quotes/src/views/Register.tsx",["43","44","45"],"import React, { useState } from \"react\"\nimport AppShell from \"../components/app-shell\"\n\ntype RegisterUser = {\n  firstName: string,\n  email: string,\n  password: string\n}\n\nconst Register: React.FC = () => {\n  const [creds, setCreds] = useState({\n    firstName: \"\",\n    email: \"\",\n    password: \"\"\n  })\n\n  return (\n    <AppShell>\n      <div className=\"center-wrapper\">\n        <h1 className=\"register-header\">Register</h1>\n        <form className=\"form-wrapper register\">\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"firstName\">\n              First Name\n            </label>\n            <input \n              className=\"input\"\n              id=\"firstName\"\n              type=\"text\" \n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"email\">\n                Email\n            </label>\n            <input \n              className=\"input\"\n              id=\"email\"\n              type=\"text\" \n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input \n              className=\"input\"\n              id=\"password\"\n              type=\"password\" \n            />\n          </div>\n          <button className=\"button-register\" type=\"submit\">\n            Register\n          </button>\n        </form>\n        <p className=\"redirect\">\n          Already have an account? Login{\" \"}\n            <a href=\"/login\">here.</a>\n        </p>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default Register\n","/Users/trevor/fun/dune-quotes/src/views/Login.tsx",["46","47","48"],"import React, { useState } from \"react\"\nimport AppShell from \"../components/app-shell\"\n\ntype LoginUser = {\n  email: string,\n  password: string\n}\n\nconst Login: React.FC = () => {\n  const [creds, setCreds] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  return (\n    <AppShell>\n      <div className=\"center-wrapper\">\n        <h1 className=\"register-header\">Login</h1>\n        <form className=\"form-wrapper login\">\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input \n              className=\"input\"\n              id=\"email\"\n              type=\"text\" \n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <label className=\"label\" htmlFor=\"password\">\n                Password\n            </label>\n            <input \n              className=\"input\"\n              id=\"password\"\n              type=\"text\" \n            />\n          </div>\n          <button className=\"button-register\" type=\"submit\">\n            Login\n          </button>\n        </form>\n        <p className=\"redirect\">\n          Don't have an account yet? Register{\" \"}\n            <a href=\"/register\">here.</a>\n        </p>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default Login\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":6,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":11,"column":10,"nodeType":"55","messageId":"56","endLine":11,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":11,"column":17,"nodeType":"55","messageId":"56","endLine":11,"endColumn":25},{"ruleId":"53","severity":1,"message":"59","line":4,"column":6,"nodeType":"55","messageId":"56","endLine":4,"endColumn":15},{"ruleId":"53","severity":1,"message":"57","line":10,"column":10,"nodeType":"55","messageId":"56","endLine":10,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":10,"column":17,"nodeType":"55","messageId":"56","endLine":10,"endColumn":25},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'RegisterUser' is defined but never used.","Identifier","unusedVar","'creds' is assigned a value but never used.","'setCreds' is assigned a value but never used.","'LoginUser' is defined but never used.","no-global-assign","no-unsafe-negation"]